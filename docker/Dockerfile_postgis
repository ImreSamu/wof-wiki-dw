FROM postgis/postgis:13-master
#FROM postgis:13-3.1-bullseye
#FROM postgis/postgis:13-3.1

ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      apt-utils\
      bison \
      build-essential \
      ca-certificates \
      cmake \
      flex \
      git \
      libboost-all-dev \
      libpq-dev \
      libsqlite3-dev \
      libssl-dev \
      m4 \
      openssl \
      pg-cloudconfig \
      pgxnclient \
      postgresql-$PG_MAJOR-toastinfo \
      postgresql-plpython3-$PG_MAJOR \
      postgresql-server-dev-$PG_MAJOR \
      sqlite3 \
      wget \
   && rm -rf /var/lib/apt/lists/*

RUN pgxn install icu_ext
RUN pgxn install lostgis

# install cartodb-postgresql
RUN   mkdir -p /cartodb-postgresql \
    && git clone --depth 1 --branch master https://github.com/CartoDB/cartodb-postgresql.git /cartodb-postgresql \
    && cd /cartodb-postgresql \
    && make all install

RUN   mkdir -p /pg_similarity \
    && git clone --depth 1 --branch master https://github.com/eulerto/pg_similarity.git  /pg_similarity \
    && cd /pg_similarity \
    && USE_PGXS=0 make \
    && USE_PGXS=0 make install

RUN    mkdir -p /sql/sqlite_fdw \
    && git clone --depth 1 --branch master https://github.com/pgspider/sqlite_fdw.git  /sql/sqlite_fdw  \
    && cd /sql/sqlite_fdw \
    && make USE_PGXS=1 \
    && make install USE_PGXS=1

# install mapnik-german-l10n
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      curl \
      libcunit1-dev \
      libicu-dev \
      libkakasi2-dev \
      libutf8proc-dev \
      pandoc \
   && rm -rf /var/lib/apt/lists/*

RUN    mkdir -p /mapnik-german-l10n \
    && git clone --depth 1 --branch master https://github.com/giggls/mapnik-german-l10n.git /mapnik-german-l10n \
    && cd /mapnik-german-l10n \
    && make all \
    && make install \
    && make clean

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      libcurl4-openssl-dev \
      pkg-config \
      uuid-dev \
   && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /clickhouse_fdw \
    && git clone  --depth 1 --branch master  https://github.com/adjust/clickhouse_fdw.git \
    && cd /clickhouse_fdw \
    && mkdir build && cd build \
    && cmake .. \
    && make \
    && make install

ADD pgtune.py            /pgtune.py
ADD pgtune-db.sh         /docker-entrypoint-initdb.d/pgtune-db.sh

# ENV PGCENTER_VERSION 0.6.6
# RUN wget https://github.com/lesovsky/pgcenter/releases/download/v0.6.6/pgcenter_0.6.6_Linux_x86_64.deb \
#     && dpkg -i ./pgcenter_0.6.6_Linux_x86_64.deb \
#     && rm pgcenter_0.6.6_Linux_x86_64.deb

#  ADD pgxn-load.sh  /docker-entrypoint-initdb.d/pgxn-load.sh
#### RUN pgxn install madlib

# RUN set -eux \
#     && apt-get update \
#     && apt-get install -yqq --no-install-suggests --no-install-recommends \
#         libedit-dev \
#         libkrb5-dev \
#         libpam-dev \
#         libpq-dev \
#         libpq5 \
#         libreadline-dev \
#         libselinux-dev \
#         libssl-dev \
#         libz-dev \
#         postgresql-client-$PG_MAJOR \
#         postgresql-client-common \
#         postgresql-common \
#         postgresql-server-dev-$PG_MAJOR \
#         zlib1g-dev \
#     && rm -rf /var/lib/apt/lists/*
# RUN ln -snf /usr/lib/postgresql/${PG_MAJOR}/lib/libpgcommon.a /usr/lib/x86_64-linux-gnu/libpgcommon.a
# RUN ln -snf /usr/lib/postgresql/${PG_MAJOR}/lib/libpgport.a /usr/lib/x86_64-linux-gnu/libpgport.a
# RUN    mkdir -p ./pg_bulkload \
#     && git clone --depth 1 --branch master https://github.com/etcimon/pg_bulkload.git  ./pg_bulkload  \
#     && cd ./pg_bulkload \
#     && USE_PGXS=1 make all \
#     && USE_PGXS=1 make install
# # make installcheck
# # create extension pg_bulkload;
